{"version":3,"sources":["util.tsx","Global.ts","position_store.ts","canvas.ts","model.ts","component/ContractGrid.tsx","component/HomePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Utils","o","$","model","console","log","existing","PostionStore","getData","filter","i","contract","ls","cp","strike","length","addAmount","amount","addRow","push","plotPosition","LS","LONG","SHORT","type","CP","CALL","PUT","price","PositionModel","getTXOInstance","Contract","TXO","undefined","ask","bid","p","m","parsePosition","style","border","padding","width","onClick","addPosition","posiFn","GlobalVar","txoData","profit","settle","this","data","getPositionTable","find","remove","delRecIdx","forEach","rec","equals","splice","fplot","document","querySelector","fnEtStk","getAnalyzeFn","firstChild","removeChild","fpVO","target","tip","xLine","yLine","grid","yAxis","label","xAxis","domain","spot","annotations","val","x","text","functionPlot","strikes","Set","posiFnVO","pos","m1","b1","m2","b2","add","addPosiFunc","Array","from","Infinity","sort","a","b","fnSet","item","defautFnVO","posi","fn","plotVO","range","skipTip","Coordinate","y","CanvasBuilder","canvas","getElementById","ctx","getContext","y_base","height","draw","addEventListener","e","rect","getBoundingClientRect","pageX","Number","left","toFixed","pageY","top","mousePointX","min_settle","settlePerPx","totalProfit","mod","getProfit","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","fillStyle","font","floatText","toString","floatText2","profitPerPx","measureText","textAlign","fillText","clear","settle_range","profit_range","settle_origin","x_0","convertSettleToX","max_settle","drawPosition","fillRect","getInflections","coor","idx","convertProfitToY","isInit","enabled","row","td_act","td_cp","td_con","td_strike","td_amount","td_price","amountField","children","prop","click","addClass","siblings","removeClass","setDelBtn","setContract","setActionCbx","setCPCbx","setStrikePrice","setAmount","setPrice","append","td","btn","icon","css","removePosition","lsCbx","long","createElement","short","change","valChange","selected","conCbx","txo","tx","TX","c","input","attr","overTick","maxX","maxY","minX","minY","re","fMin","getSettle","fStrike","fMax","act","init","ContractGrid","props","state","items","setState","React","Children","map","child","Component","HomePage","contractSelector","createRef","callContracts","putContracts","s","Math","abs","lcBtn","createPosiBtn","scBtn","lpBtn","spBtn","current","home","get","window","location","href","match","loadContracts","m_2","removeAllPosition","id","display","overflow","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6e00c482.chunk.js","sourcesContent":["import $ from 'jquery';\r\nimport React, { ButtonHTMLAttributes } from 'react';\r\nimport { PostionStore } from './position_store'\r\nimport { PositionModel, Contract, CP, LS } from './model'\r\nimport Button from './component/Button'\r\nimport GlobalVar from './Global';\r\nimport { Col } from 'react-grid-system';\r\n\r\nexport class Utils {\r\n  static posiFn: any = {}\r\n\r\n  static checkNull(o: any) {\r\n    if (o == null)\r\n      return '-'\r\n\r\n    return o\r\n  }\r\n\r\n  static getPositionTable() {\r\n    return $('#positionTable')\r\n  }\r\n\r\n  static addPosition(model: PositionModel) {\r\n\r\n    console.log('addposi' + model)\r\n    let existing = PostionStore.getData().filter(i => i.contract == model.contract && i.ls == model.ls && i.cp == model.cp && i.strike == model.strike)\r\n\r\n    if (existing.length > 0) {\r\n      existing[0].addAmount(model.amount)\r\n    } else {\r\n      model.addRow()\r\n      PostionStore.getData().push(model)\r\n      PostionStore.plotPosition()\r\n    }\r\n  }\r\n\r\n  /* [{\"ls\":\"L\",\"contract\":{\"type\":\"C\",\"strike\":18200,\"bid\":47.5,\"ask\":48},\"price\":48},\r\n  {\"ls\":\"S\",\"contract\":{\"type\":\"C\",\"strike\":18300,\"bid\":33.5,\"ask\":35.5},\"price\":33.5}] */\r\n  static parsePositionForRaw(o: any) {\r\n    let ls = (o.ls == 'L') ? LS.LONG : LS.SHORT\r\n    let contract = o.contract\r\n    let type = (contract.type == 'C') ? CP.CALL : CP.PUT\r\n    let strike = contract.strike\r\n    let price = o.price\r\n\r\n    return PositionModel.getTXOInstance(ls, type, Contract.TXO, strike, 1, price)\r\n  }\r\n\r\n  static parsePosition(o: any, ls: LS) {\r\n    let type = (o.type == 'C') ? CP.CALL : CP.PUT\r\n    let strike = o.strike\r\n    let price = undefined\r\n\r\n    if (LS.LONG === ls)\r\n      price = o.ask\r\n    else if (LS.SHORT === ls)\r\n      price = o.bid\r\n\r\n    return PositionModel.getTXOInstance(ls, type, Contract.TXO, strike, 1, price)\r\n  }\r\n\r\n  static createPosiBtn(p: any, ls: LS) {\r\n    let m = Utils.parsePosition(p, ls)\r\n    if (m.price == undefined)\r\n      return ''\r\n\r\n    // let fnName = ls + p.type + p.strike + '_posifn'\r\n    // Utils.posiFn[fnName] = () => {\r\n    //   m = Utils.parsePosition(p, ls)\r\n    //   Utils.addPosition(m)\r\n    // }\r\n    // return '<button type=\"button\" style=\"width:100%;\" onclick=\"Utils.posiFn.' + fnName + '()\">' + m.price + '</button> '\r\n\r\n    const style= {\r\n      width:'100%'\r\n    }\r\n\r\n      const colStyle= {border: '1px solid black',\r\n      padding: '3px'}\r\n\r\n    return <Col style={colStyle}><button style={style} onClick={() => {\r\n      m = Utils.parsePosition(p, ls)\r\n      Utils.addPosition(m)\r\n    }}>    {m.price}</button></Col>\r\n  }\r\n\r\n\r\n\r\n\r\n}","export default class GlobalVar{\r\n    public static txoData:any = {};\r\n\r\n} \r\n\r\n","import $ from 'jquery';\r\nimport {PositionModel,Contract,CP,LS} from './model'\r\nimport {Utils} from './util'\r\nimport GlobalVar from './Global'\r\ndeclare function functionPlot(arg: any): any;\r\n\r\nexport class PoistionCoefficient {\r\n\r\n    y: number = 0//profit\r\n    x: number = 0//settle price\r\n\r\n    ls: number\r\n    cp: number\r\n    strike: number\r\n    price: number\r\n    amount: number\r\n\r\n}\r\n\r\nexport class PostionStore {\r\n\r\n    //plot function Coefficients\r\n    profit: number//y\r\n    settle: number//x\r\n    strike: number\r\n    cp: number//C:+1  P:-1\r\n    ls: number//L:-  S:+\r\n    price: number\r\n\r\n    // static strikes:Array<number>\r\n    // static m:number\r\n    // static b:number\r\n\r\n    private static data: Array<PositionModel> = []\r\n\r\n    static getData() {\r\n        return this.data\r\n    }\r\n\r\n    static addPosition(p: PositionModel) {\r\n        this.data.push(p)\r\n    }\r\n\r\n    static removeAllPosition() {\r\n        this.data = []\r\n        \r\n        Utils.getPositionTable().find(\"tr:gt(0)\").remove()\r\n        PostionStore.plotPosition()\r\n    }\r\n\r\n    static removePosition(p: PositionModel) {\r\n\r\n        let delRecIdx: number = undefined\r\n\r\n        this.data.forEach((rec, i) => {\r\n\r\n            if (rec.equals(p))\r\n                delRecIdx = i\r\n        });\r\n\r\n        if (delRecIdx !== undefined)\r\n            this.data.splice(delRecIdx, 1)\r\n\r\n        console.log('removed rec: ' + delRecIdx)\r\n    }\r\n\r\n    static plotPosition() {\r\n\r\n        const fplot = document.querySelector(\"#fplot\")\r\n\r\n        let fnEtStk = this.getAnalyzeFn()\r\n        // console.log(data)\r\n\r\n        //reset\r\n        while (fplot.firstChild) {\r\n            fplot.removeChild(fplot.firstChild);\r\n        }\r\n\r\n        let fpVO: any = {\r\n            target: fplot,\r\n            tip: {\r\n                xLine: true,    // dashed line parallel to y = 0\r\n                yLine: true    // dashed line parallel to x = 0\r\n                //   renderer: (x:number, y:number, index:number) =>{\r\n                //     return x+' : '+y\r\n                //   }\r\n            },\r\n            grid: true,\r\n            yAxis: { label: 'Profit (tick)' },\r\n            xAxis: { domain: [GlobalVar.txoData.spot - 500, GlobalVar.txoData.spot + 500], label: 'Settle Price' },\r\n            data: fnEtStk.data,\r\n            annotations: fnEtStk.annotations\r\n            // data: [\r\n            //   {fn: 'x^2'},\r\n            //   {fn: '3x'}\r\n            // ]\r\n        }\r\n\r\n        let spot = $('#spot').val()\r\n\r\n        if (spot)\r\n            fpVO.annotations.push({ x: spot, text: 'spot: ' + spot })\r\n\r\n        functionPlot(fpVO)\r\n    }\r\n\r\n    static getAnalyzeFn() {\r\n\r\n        let strikes: Set<number> = new Set\r\n\r\n        //[{strike,[m1,b1],[m2,b2]}]\r\n        let posiFnVO: Array<any> = []\r\n\r\n        this.data.forEach((pos) => {\r\n\r\n            let hRange: Array<any> = [0, pos.strike]\r\n            let sRange: Array<any> = [pos.strike, Infinity]\r\n\r\n            //multi\r\n            let m1: number\r\n            let b1: number\r\n\r\n            let m2: number\r\n            let b2: number\r\n\r\n            let ls\r\n            let cp\r\n\r\n            if (pos.contract === Contract.TXO) {\r\n                if (pos.ls === LS.LONG)\r\n                    ls = -1\r\n                else\r\n                    ls = 1\r\n\r\n                if (pos.cp === CP.CALL)\r\n                    cp = 1\r\n                else\r\n                    cp = -1\r\n\r\n                if (cp === 1) {\r\n\r\n                    m1 = 0\r\n                    b1 = (ls * pos.price) * pos.amount\r\n                    m2 = -ls * cp * pos.amount\r\n                    b2 = (ls * (pos.price) + ls * cp * pos.strike) * pos.amount\r\n                } else {\r\n\r\n                    m1 = -ls * cp * pos.amount\r\n                    b1 = (ls * (pos.price) + ls * cp * pos.strike) * pos.amount\r\n                    m2 = 0\r\n                    b2 = (ls * pos.price) * pos.amount\r\n                }\r\n\r\n                strikes.add(pos.strike)\r\n                posiFnVO.push([pos.contract, pos.strike, [m1, b1], [m2, b2]])\r\n            } else {\r\n\r\n                if (pos.ls === LS.LONG) {\r\n\r\n                    m1 = 1 * pos.amount\r\n                } else {\r\n\r\n                    m1 = -1 * pos.amount\r\n                }\r\n\r\n                b1 = -pos.price * pos.amount\r\n\r\n                posiFnVO.push([pos.contract, [m1, b1]])\r\n            }\r\n\r\n\r\n\r\n        })\r\n\r\n        return this.addPosiFunc(Array.from(strikes), posiFnVO)\r\n    }\r\n\r\n    static addPosiFunc(strikes: Array<number>, posiFnVO: Array<Array<any>>) {\r\n\r\n        strikes.push(Infinity)\r\n        strikes.sort((a, b) => { return a - b })\r\n\r\n        //[[[range],m,b]]\r\n        let fnSet: Array<Array<any>> = []\r\n        let annotations: Array<object> = []\r\n\r\n        strikes.forEach((item, i) => {\r\n\r\n            //[[range],m,b]\r\n            let defautFnVO = [[strikes[i], strikes[i + 1]], 0, 0]\r\n\r\n            if (i === 0) {\r\n                fnSet.push([[0, strikes[0]], 0, 0])\r\n                fnSet.push(defautFnVO)\r\n            } else if (i === strikes.length - 1) { }\r\n\r\n            else\r\n                fnSet.push(defautFnVO)\r\n\r\n\r\n            if (item !== Infinity)\r\n                annotations.push({ x: item, text: item })\r\n        })\r\n\r\n        // posiFnVO.sort((a,b)=>{return a[0]-b[0]})\r\n\r\n        if (fnSet.length === 0 && posiFnVO.length !== 0) {\r\n            fnSet.push([[0, Infinity], 0, 0])\r\n        }\r\n\r\n        posiFnVO.forEach(posi => {\r\n\r\n            let contract = posi[0]\r\n            let strike = posi[1]\r\n\r\n            fnSet.forEach(fn => {\r\n                if (contract === Contract.TXO) {\r\n                    if (fn[0][1] <= strike) {\r\n\r\n                        //m\r\n                        fn[1] += posi[2][0]\r\n                        //b\r\n                        fn[2] += posi[2][1]\r\n\r\n                    } else {\r\n\r\n                        //m\r\n                        fn[1] += posi[3][0]\r\n                        //b\r\n                        fn[2] += posi[3][1]\r\n                    }\r\n                } else {\r\n                    //m\r\n                    fn[1] += posi[1][0]\r\n                    //b\r\n                    fn[2] += posi[1][1]\r\n                }\r\n            })\r\n\r\n\r\n        })\r\n\r\n\r\n        console.log(fnSet)\r\n\r\n        //range ,fn\r\n        let plotVO: Array<object> = []\r\n\r\n        plotVO.push({ range: [0, Infinity], fn: '0', skipTip: true })\r\n\r\n        fnSet.forEach((item) => {\r\n\r\n            plotVO.push({ range: item[0], fn: item[1] + '*x+' + item[2]/*,closed: true*/ })\r\n        })\r\n\r\n\r\n        return { annotations: annotations, data: plotVO }\r\n    }\r\n\r\n}","import {Contract, PositionModel} from './model'\r\nimport {PostionStore} from './position_store'\r\n\r\nexport class Coordinate {\r\n    x: number\r\n    y: number\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x\r\n        this.y = y\r\n    }\r\n}\r\n\r\nexport class CanvasBuilder {\r\n\r\n    static isInit = false\r\n\r\n    static settle_range: number = 600\r\n    static settlePerPx: number\r\n    static max_settle: number\r\n    static min_settle: number\r\n\r\n    static profit_range: number = 300\r\n    static profitPerPx: number\r\n\r\n    static canvas: HTMLCanvasElement\r\n    static ctx: CanvasRenderingContext2D\r\n\r\n    static y_base: number\r\n\r\n    static init() {\r\n\r\n        CanvasBuilder.canvas = <HTMLCanvasElement>document.getElementById(\"canv\")\r\n        CanvasBuilder.ctx = CanvasBuilder.canvas.getContext(\"2d\")\r\n        CanvasBuilder.y_base = CanvasBuilder.canvas.height / 2\r\n\r\n        CanvasBuilder.draw()\r\n\r\n        CanvasBuilder.canvas.addEventListener('mousemove', (e) => {\r\n\r\n            CanvasBuilder.draw()\r\n\r\n            let rect = CanvasBuilder.canvas.getBoundingClientRect()\r\n\r\n            let x = e.pageX - Number(rect.left.toFixed(0))\r\n            let y = e.pageY - Number(rect.top.toFixed(0))\r\n\r\n            // console.log(x+' : '+y)\r\n            let mousePointX = CanvasBuilder.min_settle + x * CanvasBuilder.settlePerPx\r\n\r\n            let totalProfit = 0\r\n\r\n            //get positions from store\r\n            PostionStore.getData().forEach((mod) => {\r\n                totalProfit += mod.getProfit(mousePointX)\r\n            })\r\n\r\n            //cursor line\r\n            CanvasBuilder.ctx.beginPath()\r\n            CanvasBuilder.ctx.strokeStyle = \"green\"\r\n            CanvasBuilder.ctx.lineWidth = 1\r\n            CanvasBuilder.ctx.moveTo(x, 0)\r\n            CanvasBuilder.ctx.lineTo(x, CanvasBuilder.canvas.height)\r\n            CanvasBuilder.ctx.stroke()\r\n\r\n            CanvasBuilder.ctx.fillStyle = \"#000\"\r\n            CanvasBuilder.ctx.font = \"10px Arial\"\r\n\r\n            let floatText = \"price: \" + mousePointX.toString()\r\n            // floatText+=\"\\nprofit: \" + (CanvasBuilder.canvas.height/2-y)*CanvasBuilder.profitPerPx\r\n            let floatText2 = \"profit: \" + totalProfit / CanvasBuilder.profitPerPx\r\n            if (CanvasBuilder.ctx.measureText(floatText).width > CanvasBuilder.canvas.width - x - 10) {\r\n                CanvasBuilder.ctx.textAlign = \"right\"\r\n                CanvasBuilder.ctx.fillText(floatText, x - 10, y + 5);\r\n                CanvasBuilder.ctx.fillText(floatText2, x - 10, y + 15);\r\n            } else {\r\n\r\n                CanvasBuilder.ctx.textAlign = \"left\"\r\n                CanvasBuilder.ctx.fillText(floatText, x + 20, y + 5)\r\n                CanvasBuilder.ctx.fillText(floatText2, x + 20, y + 15);\r\n            }\r\n\r\n        })\r\n\r\n        CanvasBuilder.canvas.addEventListener('mouseout', (e) => {\r\n\r\n            CanvasBuilder.clear()\r\n            CanvasBuilder.draw()\r\n\r\n        })\r\n\r\n    }\r\n\r\n    static draw() {\r\n\r\n        CanvasBuilder.clear()\r\n\r\n        CanvasBuilder.settlePerPx = CanvasBuilder.settle_range / CanvasBuilder.canvas.width\r\n        CanvasBuilder.profitPerPx = CanvasBuilder.profit_range / CanvasBuilder.canvas.height\r\n\r\n        //baseline\r\n        CanvasBuilder.ctx.beginPath()\r\n        CanvasBuilder.ctx.strokeStyle = \"black\";\r\n        CanvasBuilder.ctx.moveTo(0, CanvasBuilder.canvas.height / 2)\r\n        CanvasBuilder.ctx.lineTo(CanvasBuilder.canvas.width, CanvasBuilder.canvas.height / 2)\r\n        CanvasBuilder.ctx.stroke()\r\n\r\n        PostionStore.getData().forEach((mod) => {\r\n\r\n\r\n            let settle_origin\r\n\r\n            //TXO or TX\r\n            if (mod.contract === Contract.TXO)\r\n                settle_origin = mod.strike\r\n            else\r\n                settle_origin = Number(Number(mod.price / 50).toFixed(0)) * 50\r\n\r\n            let x_0 = CanvasBuilder.convertSettleToX(settle_origin)\r\n\r\n            CanvasBuilder.max_settle = settle_origin + CanvasBuilder.settle_range / 2\r\n            CanvasBuilder.min_settle = settle_origin - CanvasBuilder.settle_range / 2\r\n\r\n            if (mod.contract === Contract.TXO) {\r\n                //base line\r\n                CanvasBuilder.ctx.beginPath()\r\n                CanvasBuilder.ctx.strokeStyle = \"red\"\r\n                CanvasBuilder.ctx.moveTo(x_0, 0)\r\n                CanvasBuilder.ctx.lineTo(x_0, CanvasBuilder.canvas.height);\r\n                CanvasBuilder.ctx.stroke()\r\n            }\r\n\r\n\r\n            //x - axis\r\n            CanvasBuilder.ctx.fillStyle = \"Teal \"\r\n            CanvasBuilder.ctx.font = \"8px Arial\"\r\n            CanvasBuilder.ctx.textAlign = \"center\"\r\n            CanvasBuilder.ctx.strokeStyle = \"black\";\r\n\r\n            for (let i = CanvasBuilder.min_settle; i <= CanvasBuilder.max_settle; i += 50) {\r\n\r\n                //scale\r\n                CanvasBuilder.ctx.beginPath()\r\n                CanvasBuilder.ctx.moveTo(this.convertSettleToX(i), CanvasBuilder.canvas.height / 2 * CanvasBuilder.profitPerPx - 5)\r\n                CanvasBuilder.ctx.lineTo(this.convertSettleToX(i), CanvasBuilder.canvas.height / 2 * CanvasBuilder.profitPerPx + 1)\r\n                CanvasBuilder.ctx.stroke()\r\n                \r\n                //settle text\r\n                CanvasBuilder.ctx.fillText(i.toString(), this.convertSettleToX(i), CanvasBuilder.canvas.height / 2 * CanvasBuilder.profitPerPx + 10)\r\n\r\n            }\r\n\r\n            //----draw diagram----\r\n            this.drawPosition(mod)\r\n\r\n            // if (mod.contract === Contract.TXO) {\r\n\r\n            // }\r\n\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    static convertSettleToX(settle: number) {\r\n        return (settle - CanvasBuilder.min_settle) / this.settlePerPx\r\n    }\r\n\r\n    static convertProfitToY(profit: number) {\r\n        return (CanvasBuilder.profit_range / 2 - profit) / this.profitPerPx\r\n    }\r\n\r\n    static clear() {\r\n        // ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n        CanvasBuilder.ctx.fillStyle = \"#FFF\";\r\n        CanvasBuilder.ctx.fillRect(0, 0, CanvasBuilder.canvas.width, CanvasBuilder.canvas.height)\r\n    }\r\n\r\n    static drawPosition(mod: PositionModel) {\r\n\r\n        CanvasBuilder.ctx.strokeStyle = \"blue\"\r\n        CanvasBuilder.ctx.beginPath()\r\n\r\n        mod.getInflections(this.max_settle, this.profit_range / 2, this.min_settle, -this.profit_range / 2).forEach((\r\n            coor, idx) => {\r\n\r\n            let x = this.convertSettleToX(coor.x)\r\n            let y = this.convertProfitToY(coor.y)\r\n\r\n            // console.log('s:p '+coor.x+' : '+coor.y)\r\n            // console.log('x:y '+x+' : '+y)\r\n\r\n            if (idx === 0)\r\n                CanvasBuilder.ctx.moveTo(x, y)\r\n            else\r\n                CanvasBuilder.ctx.lineTo(x, y)\r\n\r\n        })\r\n\r\n        CanvasBuilder.ctx.stroke()\r\n    }\r\n}\r\n\r\nexport {}","import $ from 'jquery';\r\nimport {Coordinate} from './canvas'\r\nimport {PostionStore} from './position_store'\r\nimport {Utils} from './util'\r\n\r\nexport enum LS { LONG = \"Long\", SHORT = \"Short\" }\r\nexport enum CP { CALL = \"Call\", PUT = \"Put\" }\r\nexport enum Contract { TX = 'TX', TXO = 'TXO' }\r\n\r\n\r\nexport class PositionModel {\r\n\r\n  enabled: boolean\r\n  \r\n  contract: Contract\r\n  ls: LS\r\n  strike: number\r\n  cp: CP\r\n  amount: number\r\n  price: number\r\n  row = $(\"<tr>\")\r\n\r\n  td_act: JQuery<HTMLElement>\r\n  td_cp: JQuery<HTMLElement>\r\n  td_con: JQuery<HTMLElement>\r\n  td_strike: JQuery<HTMLElement>\r\n  td_amount: JQuery<HTMLElement>\r\n  td_price: JQuery<HTMLElement>\r\n\r\n  constructor() { }\r\n\r\n  static getTXInstance(\r\n    act: LS,\r\n    amount: number,\r\n    price: number) {\r\n\r\n    let init = new PositionModel();\r\n\r\n\r\n    init.amount = amount;\r\n    init.contract = Contract.TX;\r\n    init.ls = act;\r\n    init.price = price;\r\n\r\n    return init;\r\n  }\r\n\r\n  static getTXOInstance(act: LS,\r\n    cp: CP,\r\n    contract: Contract,\r\n    strike: number,\r\n    amount: number,\r\n    price: number) {\r\n\r\n    let init = new PositionModel();\r\n\r\n    init.amount = amount;\r\n    init.contract = Contract.TXO;\r\n    init.ls = act;\r\n    init.strike = strike;\r\n    init.cp = cp;\r\n    init.price = price;\r\n\r\n    return init;\r\n  }\r\n\r\n  //get value object\r\n  valChange() {\r\n\r\n    // console.log(this)\r\n    // CanvasBuilder.draw()\r\n\r\n    if(this.contract !== Contract.TXO){\r\n\r\n      this.td_cp.children().prop('disabled',true)\r\n      this.td_strike.children().prop('disabled',true)\r\n\r\n    }else{\r\n\r\n      this.td_cp.children().prop('disabled',false)\r\n      this.td_strike.children().prop('disabled',false)\r\n    }\r\n\r\n    PostionStore.plotPosition()\r\n\r\n  }\r\n\r\n  //add position row\r\n  addRow() {\r\n    this.row.click(function () {\r\n      $(this).addClass(\"selected\").siblings().removeClass(\"selected\");\r\n    });\r\n\r\n    // this.setCkx()\r\n    this.setDelBtn()\r\n    this.setContract()\r\n    this.setActionCbx()\r\n    this.setCPCbx()\r\n    this.setStrikePrice()\r\n    this.setAmount()\r\n    this.setPrice()\r\n\r\n    Utils.getPositionTable().append(this.row)\r\n  }\r\n\r\n  // setCkx() {\r\n\r\n  //   let td = $('<td>')\r\n  //   let check = $('<input>')\r\n\r\n  //   check.attr('type', 'checkbox')\r\n  //   check.attr('checked', 'true')\r\n\r\n  //   check.change(() => {\r\n  //     this.enabled = check.prop('checked')\r\n  //     console.log('chk chg ' + this.enabled)\r\n\r\n  //     this.valChange()\r\n  //   })\r\n\r\n  //   td.append(check);\r\n  //   this.row.append(td);\r\n  // }\r\n\r\n  setDelBtn() {\r\n\r\n    console.log('add del')\r\n\r\n    let td = $('<td>')\r\n    let btn = $('<button>')\r\n\r\n    btn.addClass('btn btn-default btn-sm')\r\n\r\n    let icon = $('<span>').addClass('glyphicon glyphicon-remove')\r\n    icon.css('color','red')\r\n    btn.append(icon)\r\n\r\n    btn.click(() => {\r\n      \r\n      PostionStore.removePosition(this)\r\n      this.row.remove()\r\n      PostionStore.plotPosition()\r\n    })\r\n\r\n    td.append(btn);\r\n    this.row.append(td);\r\n  }\r\n\r\n  setActionCbx() {\r\n\r\n    let td = $('<td>')\r\n    let lsCbx = $('<select>')\r\n    let long = document.createElement('option');\r\n\r\n    long.text = LS.LONG\r\n\r\n    let short = document.createElement('option');\r\n    short.text = LS.SHORT\r\n    lsCbx.append(long);\r\n    lsCbx.append(short);\r\n\r\n    lsCbx.change(() => {\r\n      if ($(\"option:selected\", lsCbx).val() === LS.LONG)\r\n        this.ls = LS.LONG\r\n      else\r\n        this.ls = LS.SHORT\r\n\r\n      console.log('chk chg ' + this.ls)\r\n      this.valChange()\r\n    })\r\n\r\n    if (this.ls == LS.LONG)\r\n      long.selected = true;\r\n    else\r\n      short.selected = true;\r\n\r\n    td.append(lsCbx);\r\n\r\n    this.row.append(td);\r\n    this.td_act = td\r\n  }\r\n\r\n  setContract() {\r\n\r\n    let td = $('<td>')\r\n\r\n    let conCbx = $('<select>')\r\n    let txo = document.createElement('option');\r\n    txo.text = Contract.TXO\r\n\r\n    let tx = document.createElement('option');\r\n    tx.text = Contract.TX\r\n    conCbx.append(txo);\r\n    conCbx.append(tx);\r\n\r\n    conCbx.change(() => {\r\n\r\n      if ($(\"option:selected\", conCbx).val() === Contract.TXO)\r\n        this.contract = Contract.TXO\r\n      else\r\n        this.contract = Contract.TX\r\n\r\n      console.log('cp chg ' + this.contract)\r\n      this.valChange()\r\n    })\r\n\r\n    if (this.contract == Contract.TXO)\r\n      txo.selected = true\r\n    else\r\n      tx.selected = true\r\n\r\n    td.append(conCbx)\r\n \r\n    this.row.append(td)\r\n    this.td_con = td\r\n  }\r\n\r\n  \r\n  setCPCbx() {\r\n\r\n    let td = $('<td>');\r\n    let lsCbx = $('<select>')\r\n\r\n    let c = document.createElement('option');\r\n    c.text = CP.CALL\r\n\r\n    let p = document.createElement('option');\r\n    p.text = CP.PUT\r\n    lsCbx.append(c);\r\n    lsCbx.append(p);\r\n\r\n    lsCbx.change(() => {\r\n      if ($(\"option:selected\", lsCbx).val() === CP.CALL)\r\n        this.cp = CP.CALL\r\n      else\r\n        this.cp = CP.PUT\r\n      console.log('cp chg ' + this.cp)\r\n      this.valChange()\r\n    })\r\n\r\n    if (this.cp == CP.CALL)\r\n      c.selected = true\r\n    else\r\n      p.selected = true\r\n\r\n    td.append(lsCbx)\r\n\r\n    this.row.append(td)\r\n    this.td_cp = td\r\n\r\n   \r\n  }\r\n\r\n  setStrikePrice() {\r\n\r\n    let td = $('<td>')\r\n    let input = $('<input>')\r\n    input.attr('type', 'number')\r\n    input.attr('step', 50)\r\n    input.val(this.strike)\r\n\r\n    input.change(() => {\r\n      this.strike = Number(input.val())\r\n      console.log('strike chg ' + this.strike)\r\n      this.valChange()\r\n    })\r\n\r\n\r\n\r\n    td.append(input)\r\n    this.row.append(td)\r\n    this.td_strike = td\r\n\r\n    \r\n  }\r\n\r\n  amountField:JQuery<HTMLElement>\r\n\r\n  setAmount() {\r\n\r\n    let td = $('<td>')\r\n\r\n    this.amountField = $('<input>')\r\n    this.amountField.attr('type', 'number')\r\n    this.amountField.val(this.amount)\r\n\r\n    this.amountField.change(() => {\r\n      this.amount = Number(this.amountField.val())\r\n      console.log('input chg ' + this.amount)\r\n      this.valChange()\r\n    })\r\n\r\n    td.append(this.amountField)\r\n    this.row.append(td)\r\n    this.td_amount = td\r\n  }\r\n\r\n  addAmount(i:number){\r\n    this.amount += i\r\n    this.amountField.val(this.amount)\r\n    this.valChange()\r\n  }\r\n\r\n  setPrice() {\r\n\r\n    let td = $('<td>')\r\n    let input = $('<input>')\r\n    input.attr('type', 'number')\r\n    input.attr('step', 0.5)\r\n    input.val(this.price)\r\n\r\n    input.change(() => {\r\n      this.price = Number(input.val())\r\n      console.log('price chg ' + this.price)\r\n      this.valChange()\r\n    })\r\n\r\n    td.append(input)\r\n    this.row.append(td)\r\n    this.td_price = td\r\n  }\r\n\r\n\r\n  getProfit(settle: number) {\r\n\r\n    // console.log('getProfit')\r\n\r\n    let ls = (this.ls === LS.LONG) ? -1 : 1\r\n    let profit\r\n\r\n    if (this.contract === Contract.TX) {\r\n\r\n      profit = this.price - settle * ls\r\n\r\n    } else if (this.contract === Contract.TXO) {\r\n\r\n      let cp = (this.cp === CP.CALL) ? 1 : -1\r\n\r\n      profit = ls * this.price\r\n\r\n      let isInTheMoney: boolean\r\n      if (cp === 1)\r\n        isInTheMoney = settle > this.strike\r\n      else\r\n        isInTheMoney = settle < this.strike\r\n\r\n      if (isInTheMoney)\r\n        profit -= ls * cp * (settle - this.strike)\r\n\r\n    }\r\n\r\n    return profit * this.amount\r\n  }\r\n\r\n  getSettle(profit: number) {\r\n\r\n    // console.log('getSettle')\r\n\r\n    let ls = (this.ls === LS.LONG) ? -1 : 1\r\n    let settle\r\n\r\n    if (this.contract === Contract.TX) {\r\n\r\n      settle = (profit / this.amount - this.price) / ls\r\n    } else if (this.contract === Contract.TXO) {\r\n      let cp = (this.cp === CP.CALL) ? 1 : -1\r\n      \r\n\r\n      let overTick = (profit / this.amount - ls * this.price) * cp\r\n\r\n      settle = this.strike + overTick * cp\r\n\r\n    }\r\n\r\n    return settle\r\n\r\n  }\r\n\r\n  getInflections(maxX: number, maxY: number, minX: number, minY: number) {\r\n\r\n    let re: Array<Coordinate> = []\r\n\r\n    //push minX point\r\n    let fMin = this.getProfit(minX)\r\n    if (fMin < minY) {\r\n      let x = this.getSettle(minY)\r\n      re.push(new Coordinate(x, minY))\r\n    } else {\r\n      re.push(new Coordinate(minX, fMin))\r\n    }\r\n\r\n    //push strike point\r\n    let fStrike = this.getProfit(this.strike)\r\n    let x = this.strike\r\n    re.push(new Coordinate(x, fStrike))\r\n\r\n    //push maxX point\r\n    let fMax = this.getProfit(maxX)\r\n    if (fMax > maxY) {\r\n      let x = this.getSettle(maxY)\r\n      re.push(new Coordinate(x, maxY))\r\n    } else {\r\n      re.push(new Coordinate(maxX, fMax))\r\n    }\r\n\r\n    return re\r\n  }\r\n\r\n  equals(o:PositionModel){\r\n\r\n    console.log('position equal')\r\n\r\n    return this.row === o.row\r\n  }\r\n}\r\n","import React, { createRef } from 'react';\r\nimport { render } from \"react-dom\";\r\nimport $ from 'jquery';\r\nimport { LS, PositionModel, CP, Contract } from '../model'\r\nimport { PostionStore } from '../position_store'\r\nimport Button from './Button';\r\nimport { Utils } from '../util'\r\nimport GlobalVar from '../Global'\r\nimport { Container, Row, Col } from 'react-grid-system';\r\n\r\n\r\nexport default class ContractGrid extends React.Component<Props, { items: Array<any> }> {\r\n\r\n\r\n  constructor(props: any) {\r\n\r\n    super(props);\r\n    this.state = {\r\n      items: [<Row><Col>Buy</Col><Col>Sell</Col><Col>Strike</Col><Col>Buy</Col><Col>Sell</Col></Row>]\r\n    }\r\n    props.children = [<Row><Col>Buy</Col><Col>Sell</Col><Col>Strike</Col><Col>Buy</Col><Col>Sell</Col></Row>]\r\n\r\n  }\r\n\r\n  addRow(row: React.ReactChild) {\r\n    this.setState({\r\n      items: [...this.state.items, row]\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (<Container>\r\n      {React.Children.map(this.state.items, child => {\r\n        return child\r\n      })}\r\n    </Container>);\r\n  }\r\n}\r\n\r\n\r\ninterface Props {\r\n  // lcBtn: any;\r\n  // scBtn: any;\r\n  // strike:any;\r\n  // lpBtn: any;\r\n  // spBtn: any;\r\n  children?: React.ReactChild[];\r\n  ref?: any\r\n}\r\n\r\ninterface State {\r\n  items: Array<any>\r\n  ref?: Date\r\n}\r\n","import React from 'react';\r\nimport $ from 'jquery';\r\nimport { LS, PositionModel, CP, Contract } from '../model'\r\nimport { PostionStore } from '../position_store'\r\nimport Button from './Button';\r\nimport { Utils } from '../util'\r\nimport GlobalVar from '../Global'\r\nimport ContractGrid from './ContractGrid'\r\nimport { Container, Row, Col } from 'react-grid-system';\r\n/*\r\nfunction loadContracts() {\r\n  let selector = $('#contractSelector')\r\n  // header\r\n  selector.append('<tr><th>Buy</th><th>Sell</th><th>Strike</th><th>Buy</th><th>Sell</th></tr>')\r\n\r\n\r\n  for (let i = 0; i < GlobalVar.txoData.strikes.length; i++) {\r\n    let c = GlobalVar.txoData.callContracts[i]\r\n    let p = GlobalVar.txoData.putContracts[i]\r\n    let s = GlobalVar.txoData.strikes[i]\r\n\r\n    if (Math.abs(s - GlobalVar.txoData.spot) > 600)\r\n      continue\r\n\r\n    let lcBtn =  Utils.createPosiBtn(c, LS.LONG)\r\n    let scBtn = Utils.createPosiBtn(c, LS.SHORT)\r\n    let lpBtn = Utils.createPosiBtn(p, LS.LONG)\r\n    let spBtn =  Utils.createPosiBtn(p, LS.SHORT)\r\n\r\n    let tr = '<td>' + lcBtn + '</td><td>' + scBtn + '</td><th>' + s + '</td><td>' + lpBtn + '</td><td>' + spBtn + '</td>'\r\n\r\n    if (Math.abs(s - GlobalVar.txoData.spot) <= 25) {\r\n      tr = '<tr style=\"background-color:skyblue;\">' + tr + '</tr>'\r\n    } else {\r\n      tr = '<tr>' + tr + '</tr>'\r\n    }\r\n\r\n    selector.append(tr)\r\n  }\r\n}*/\r\n\r\n\r\n\r\nclass HomePage extends React.Component {\r\n\r\n  // contractSelector:any = (<ContractGrid></ContractGrid>)\r\n  contractSelector = React.createRef<ContractGrid>()\r\n  // contractSelector:any =  React.render(ContractGrid, document.getElementById('container'))\r\n\r\n  loadContracts() {\r\n    // let selector = $('#contractSelector')\r\n    // header\r\n    // selector.append('<tr><th>Buy</th><th>Sell</th><th>Strike</th><th>Buy</th><th>Sell</th></tr>')\r\n\r\n\r\n    for (let i = 0; i < GlobalVar.txoData.strikes.length; i++) {\r\n      let c = GlobalVar.txoData.callContracts[i]\r\n      let p = GlobalVar.txoData.putContracts[i]\r\n      let s = GlobalVar.txoData.strikes[i]\r\n\r\n      if (Math.abs(s - GlobalVar.txoData.spot) > 600)\r\n        continue\r\n\r\n    \r\n\r\n      let lcBtn = Utils.createPosiBtn(c, LS.LONG)\r\n      let scBtn = Utils.createPosiBtn(c, LS.SHORT)\r\n      let lpBtn = Utils.createPosiBtn(p, LS.LONG)\r\n      let spBtn = Utils.createPosiBtn(p, LS.SHORT)\r\n\r\n  \r\n      // let tr = '<td>' + lcBtn + '</td><td>' + scBtn + '</td><th>' + s + '</td><td>' + lpBtn + '</td><td>' + spBtn + '</td>'\r\n      let row = <Row>{lcBtn}{scBtn}<Col>{s}</Col>{lpBtn}{spBtn}</Row>\r\n\r\n      // if (Math.abs(s - GlobalVar.txoData.spot) <= 25) {\r\n      //   tr = '<tr style=\"background-color:skyblue;\">' + tr + '</tr>'\r\n      // } else {\r\n      //   tr = '<tr>' + tr + '</tr>'\r\n      // }\r\n\r\n      console.log(row)\r\n\r\n      console.log(this.contractSelector)\r\n      // console.log(this.contractSelector.props.children)\r\n\r\n      this.contractSelector.current.addRow(row)\r\n      // this.contractSelector.props.children.push(tr)\r\n\r\n      // selector.append(tr)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('onload');\r\n\r\n    let home = this;\r\n    // load raw data\r\n    $.get(window.location.href.match(/^.*\\//)[0] + \"servlet/getTxoData\", function (data) {\r\n      GlobalVar.txoData = data.data;\r\n      console.log('load data:' + GlobalVar.txoData)\r\n\r\n      // set spot\r\n      console.log('spot:' + GlobalVar.txoData.spot)\r\n      $('#spot').val(GlobalVar.txoData.spot)\r\n\r\n      // // init selector\r\n      home.loadContracts()\r\n\r\n      PostionStore.plotPosition()\r\n    });\r\n\r\n\r\n\r\n    // let srcPos: Array<any> = JSON.parse(POS)\r\n    // srcPos.forEach(element => {\r\n    //   let pos = Utils.parsePositionForRaw(element)\r\n    //   Utils.addPosition(pos)\r\n    // });\r\n\r\n\r\n    $('#addBtn').click(() => {\r\n      let m_2 = PositionModel.getTXOInstance(LS.LONG, CP.CALL, Contract.TXO, 16000, 1, 64.5)\r\n\r\n      Utils.addPosition(m_2)\r\n    })\r\n\r\n    $('#clearBtn').click(() => {\r\n      PostionStore.removeAllPosition()\r\n\r\n    })\r\n\r\n    $('#spot').change(() => {\r\n      PostionStore.plotPosition()\r\n    })\r\n\r\n\r\n\r\n    // CanvasBuilder.init()\r\n  }\r\n\r\n  render() {\r\n    const plotStyle = { display: 'inline-block', 'vertical-align': 'top' }\r\n    const selectorStyle = {\r\n      display: 'inline-block', 'max-height': '400px', overflow: 'auto',\r\n      width: '500px', padding: '5px', border: '1px solid black'\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <button id=\"refreshBtn\">Refresh</button>\r\n        </div>\r\n        <div>\r\n          <div id=\"fplot\" style={plotStyle}></div>\r\n          <div style={selectorStyle}>\r\n            <ContractGrid ref={this.contractSelector}></ContractGrid>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label>Spot</label>\r\n          <input id=\"spot\" type=\"number\" />\r\n          <button id=\"addBtn\">Add</button>\r\n          <button id=\"clearBtn\">Clear</button>\r\n        </div>\r\n        <div>\r\n          <table id=\"positionTable\">\r\n            <tr>\r\n              <th></th>\r\n              <th>標的</th>\r\n              <th>買賣</th>\r\n              <th>C/P</th>\r\n              <th>履約價</th>\r\n              <th>數量</th>\r\n              <th>價格</th>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage","import React from 'react';\n\n\nimport HomePage from './component/HomePage';\nimport './App.css';\nimport {LS} from './model'\n\ndeclare function functionPlot(arg: any): any;\n\n\n/*\nwindow.onload = function (){\n  \n  console.log('onload');\n  // load raw data\n  $.get( \"servlet/getTxoData\", function( data) {\n     txoData = data.data;\n    console.log('load data:' +txoData)\n\n     // set spot\n  $('#spot').val(txoData.spot)\n\n  // init selector\n  loadContracts()\n\n  \n  PostionStore.plotPosition()\n });\n\n \n\n  // let srcPos: Array<any> = JSON.parse(POS)\n  // srcPos.forEach(element => {\n  //   let pos = Utils.parsePositionForRaw(element)\n  //   Utils.addPosition(pos)\n  // });\n\n\n  $('#addBtn').click(() => {\n    let m_2 = PositionModel.getTXOInstance(LS.LONG, CP.CALL, Contract.TXO, 16000, 1, 64.5)\n\n    Utils.addPosition(m_2)\n  })\n\n  $('#clearBtn').click(() => {\n    PostionStore.removeAllPosition()\n   \n  })\n\n  $('#spot').change(() => {\n    PostionStore.plotPosition()\n  })\n\n\n\n  // CanvasBuilder.init()\n\n}\n*/\n\n/*\nfunction App() {\n  return (\n    <>\n      <h1>Colorful Custom Button Components</h1>\n      \n<div>\n    <div>\n        <button id=\"refreshBtn\">Refresh</button>\n    </div>\n    <div>\n        <div id=\"fplot\"></div>\n        <div>\n            <table id=\"contractSelector\"> </table>\n        </div>\n    </div>\n    <br/>\n    <div>\n        <label>Spot</label>\n        <input id=\"spot\" type=\"number\"/>\n        <button id=\"addBtn\">Add</button>\n        <button id=\"clearBtn\">Clear</button>\n    </div>\n    <div>\n        <table id=\"positionTable\">\n            <tr>\n                <th></th>\n                <th>標的</th>\n                <th>買賣</th>\n                <th>C/P</th>\n                <th>履約價</th>\n                <th>數量</th>\n                <th>價格</th>\n            </tr>\n        </table>\n    </div>\n    \n</div>\n    </>\n  );\n}\n*/\n\n// function App() {\n//   return (\n//     <>\n//       <h1>Colorful Custom Button Components</h1>\n//       <Button \n//         border=\"none\"\n//         color=\"pink\"\n//         height = \"200px\"\n//         onClick={() => alert(\"You clicked on the pink circle!\")}\n//         radius = \"50%\"\n//         width = \"200px\"\n//         children = \"I'm a pink circle!\"\n//       />\n//       <br></br>\n//     </>\n//   );\n// }\nfunction App() {\n  return (\n    <HomePage />\n  );\n}\n\n\nexport default App;\n\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}