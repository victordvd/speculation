{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./sources/core/relations/links_builder.js","webpack:///./sources/core/relations/graph_helper.js","webpack:///./sources/core/relations/links_common.js","webpack:///./sources/ext/critical_path/critical_path.js","webpack:///./sources/ext/critical_path/slack.js","webpack:///./sources/ext/critical_path.js","webpack:///./sources/utils/helpers.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gantt","getVirtualRoot","mixin","getSubtaskDates","id","config","root_id","type","types","project","$source","$target","$virtual","getLinkedTasks","includePredecessors","startIds","clearCache","_isLinksCacheEnabled","_startLinksCache","relations","visited","result","length","this","_getLinkedTasks","push","_endLinksCache","_collectRelations","rootObj","isChild","visitedLinks","linkKey","successors","_getSuccessors","predecessors","_getPredecessors","hashSum","rootTask","visitedTasks","output","from","undefined","tasksStack","current","pop","isTaskExists","getTask","rel","isSameParent","sourceParent","targetParent","target","hasChild","children","getChildren","helpers","getVertices","ids","len","source","vertices","topologicalSort","edges","hash","$incoming","successor","S","filter","v","L","node","groupAdjacentEdges","edge","res","tarjanStronglyConnectedComponents","verticesHash","stack","edgesFromTasks","recurse","connectedComponents","getVertex","workStack","index","lowLink","onStack","e","w","Math","min","com","tasks","links","findLoops","cycles","forEach","component","_get_linked_task","link","getTarget","task","taskId","_get_link_target","_get_link_source","caching","formattedLinksStash","inheritedSuccessorsStash","inheritedPredecessorsStash","getPredecessorsCache","_formatLink","isSummaryTask","isChildOf","_getImplicitLinks","respectTargetOffset","auto_scheduling_move_projects","targetDates","start_date","end_date","to","getState","drag_id","calculateDuration","fromLength","fromTask","j","toLength","toTask","lag","subtaskLink","_convertToFinishToStartLink","taskParent","_isAutoSchedulable","auto_scheduling","parent","selectOffset","selectSourceLinks","skipChild","eachTask","linksCollection","siblingLink","getLink","siblingId","siblingTask","abs","duration","_getDirectDependencies","selectSuccessors","linksIds","concat","_getInheritedDependencies","cacheCollection","stop","inheritedRelations","eachParent","parentDependencies","_getDirectSuccessors","_getInheritedSuccessors","_getDirectPredecessors","_getInheritedPredecessors","skipInherited","sourceTask","targetTask","finish_to_start","preferredStart","additionalLag","start_to_start","finish_to_finish","start_to_finish","linksBuilder","graphHelper","_isProjectEnd","_hasDuration","_getProjectEnd","_needRecalc","_cache","reset","_isRecalcNeeded","_getLinks","_calculateBranch","path","criticalTasks","adjacentLinks","next","_getSlack","_calculateSummaryTasks","summaryHash","criticalHash","getParent","_calculate","summaryTasks","isCriticalTask","init","resetCache","attachEvent","criticalPathHandler","highlight_critical_path","render","_private","_freeSlack","_totalSlack","_slackNeedCalculate","_linkedTasksById","_calculateTotalSlack","linksByTaskId","entry","slack","getFreeSlack","minSlack","linked","totalSlackByTaskId","_chainSlackCount","_slacksChanged","additional","targetWithMinimalSlack","_getTargetWithMinimalSlack","_calculateTaskSlack","_calculateRelationSlack","_calculateHierarchySlack","_calculateLinkSlack","linkId","getSlack","max","_resetTotalSlackCache","_shouldCalculateTotalSlack","getTotalSlack","dropCachedFreeSlack","slackHandler","criticalPath","assert","isCriticalLink","task1","task2","common","newSlack","next_task","relation","getTaskType","milestone","units","second","minute","hour","day","week","month","quarter","year","arrayFilter","arr","callback","getSecondsInUnit","unit","workArray","slice","arrayMap","map","resArray","arrayFind","find","arrayDifference","item","arraySome","hashToArray","sortArrayOfHash","field","desc","compare","b","sort","throttle","timeout","wait","apply","arguments","setTimeout","isArray","obj","Array","isDate","getFullYear","getMonth","getDate","isStringObject","Function","toString","constructor","isNumberObject","isBooleanObject","delay","timer","$cancelTimeout","$pending","args","clearTimeout","$execute","objectKeys","keys"],"mappings":"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","file":"ext/dhtmlxgantt_critical_path.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/codebase/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 234);\n","module.exports = function(gantt) {\n\treturn {\n\t\tgetVirtualRoot: function(){\n\t\t\treturn gantt.mixin(\n\t\t\t\tgantt.getSubtaskDates(),\n\t\t\t\t{\n\t\t\t\t\tid: gantt.config.root_id,\n\t\t\t\t\ttype: gantt.config.types.project,\n\t\t\t\t\t$source: [],\n\t\t\t\t\t$target: [],\n\t\t\t\t\t$virtual: true\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\n\t\tgetLinkedTasks: function(id, includePredecessors){\n\t\t\tvar startIds = [id];\n\t\n\t\t\t//TODO: format links cache\n\t\t\tvar clearCache = false;\n\t\t\tif(!gantt._isLinksCacheEnabled()) {\n\t\t\t\tgantt._startLinksCache();\n\t\t\t\tclearCache = true;\n\t\t\t}\n\t\t\tvar relations = [];\n\t\t\tvar visited = {};\n\t\t\tvar result = {};\n\t\t\tfor(var i = 0; i < startIds.length; i++){\n\t\t\t\tthis._getLinkedTasks(startIds[i], visited, includePredecessors, result);\n\t\t\t}\n\t\n\t\t\tfor(var i in result){\n\t\t\t\trelations.push(result[i]);\n\t\t\t}\n\t\n\t\t\t//TODO: remove redundant edges before continue https://en.wikipedia.org/wiki/Transitive_reduction\n\t\t\tif(clearCache)\n\t\t\t\tgantt._endLinksCache();\n\t\t\treturn relations;\n\t\t},\n\t\n\t\t_collectRelations: function(rootObj, isChild, includePredecessors, visitedLinks){\n\t\t\tvar successors = gantt._getSuccessors(rootObj, isChild);\n\t\n\t\t\tvar predecessors = [];\n\t\t\tif (includePredecessors) {\n\t\t\t\tpredecessors = gantt._getPredecessors(rootObj, isChild);\n\t\t\t}\n\t\t\t\n\t\t\tvar linkKey;\n\t\t\tvar relations = [];\n\t\t\tfor(var i = 0; i < successors.length; i++){\n\t\t\t\tlinkKey = successors[i].hashSum;\n\t\t\t\tif(visitedLinks[linkKey]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}else{\n\t\t\t\t\tvisitedLinks[linkKey] = true;\n\t\t\t\t\trelations.push(successors[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(var i = 0; i < predecessors.length; i++){\n\t\t\t\tlinkKey = predecessors[i].hashSum;\n\t\t\t\tif(visitedLinks[linkKey]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}else{\n\t\t\t\t\tvisitedLinks[linkKey] = true;\n\t\t\t\t\trelations.push(predecessors[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn relations;\n\t\t},\n\t\t_getLinkedTasks: function(rootTask, visitedTasks, includePredecessors, output) {\n\t\t\tvar from = rootTask === undefined ? gantt.config.root_id : rootTask;\n\t\t\tvar visitedTasks = {};\n\t\t\tvar visitedLinks = {};\n\t\t\tvar rootObj;\n\t\n\t\t\tvar tasksStack = [{from: from, includePredecessors: includePredecessors, isChild:false}];\n\t\n\t\t\twhile(tasksStack.length){\n\t\t\t\tvar current = tasksStack.pop();\n\t\t\t\tvar isChild = current.isChild;\n\t\n\t\t\t\tfrom = current.from;\n\t\t\t\tif(visitedTasks[from]){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trootObj = gantt.isTaskExists(from) ? gantt.getTask(from) : this.getVirtualRoot();\n\t\t\t\tvisitedTasks[from] = true;\n\t\t\t\t\n\t\t\t\tvar relations = this._collectRelations(rootObj, isChild, includePredecessors, visitedLinks);\n\t\n\t\t\t\tfor(var i=0; i < relations.length; i++){\n\t\t\t\t\tvar rel = relations[i];\n\t\t\t\t\toutput[rel.hashSum] = rel;\n\t\t\t\t\tvar isSameParent = rel.sourceParent == rel.targetParent;\n\t\t\t\t\tvar targetTask = rel.target;\n\t\t\t\t\tif(!visitedTasks[targetTask])\n\t\t\t\t\t\ttasksStack.push({from: rel.target, includePredecessors: true, isChild: isSameParent});\n\t\t\t\t}\n\t\n\t\t\t\tif(gantt.hasChild(rootObj.id)){\n\t\t\t\t\tvar children = gantt.getChildren(rootObj.id);\n\t\t\t\t\tfor(var i=0; i < children.length; i++){\n\t\t\t\t\t\tif(!visitedTasks[children[i]])\n\t\t\t\t\t\t\ttasksStack.push({from: children[i], includePredecessors: true, isChild: true});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn output;\n\t\t}\n\t};\n};","var helpers = require(\"../../utils/helpers\");\n\nmodule.exports = function(){\n\treturn {\n\t\tgetVertices: function(relations){\n\t\t\tvar ids = {};\n\t\t\tvar rel;\n\t\t\tfor(var i = 0, len = relations.length; i < len; i++){\n\t\t\t\trel = relations[i];\n\t\t\t\tids[rel.target] = rel.target;\n\t\t\t\tids[rel.source] = rel.source;\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\t\t\tvar id;\n\t\t\tfor(var i in ids){\n\t\t\t\tid = ids[i];\n\t\t\t\tvertices.push(id);\n\t\t\t}\n\n\t\t\treturn vertices;\n\t\t},\n\t\ttopologicalSort: function(edges){\n\t\t\tvar vertices = this.getVertices(edges);\n\t\t\tvar hash = {};\n\n\t\t\tfor(var i = 0, len = vertices.length; i < len; i ++){\n\t\t\t\thash[vertices[i]] = {id: vertices[i], $source:[], $target:[], $incoming: 0};\n\t\t\t}\n\n\t\t\tfor(var i = 0, len = edges.length; i < len; i++){\n\t\t\t\tvar successor = hash[edges[i].target];\n\t\t\t\tsuccessor.$target.push(i);\n\t\t\t\tsuccessor.$incoming = successor.$target.length;\n\t\t\t\thash[edges[i].source].$source.push(i);\n\n\t\t\t}\n\n\t\t\t// topological sort, Kahn's algorithm\n\t\t\tvar S = vertices.filter(function(v){ return !hash[v].$incoming; });\n\n\t\t\tvar L = [];\n\n\t\t\twhile(S.length){\n\t\t\t\tvar n = S.pop();\n\n\t\t\t\tL.push(n);\n\n\t\t\t\tvar node = hash[n];\n\n\t\t\t\tfor(var i = 0; i < node.$source.length; i++){\n\t\t\t\t\tvar m = hash[edges[node.$source[i]].target];\n\t\t\t\t\tm.$incoming--;\n\t\t\t\t\tif(!m.$incoming){\n\t\t\t\t\t\tS.push(m.id);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn L;\n\n\t\t},\n\t\tgroupAdjacentEdges: function(edges){\n\t\t\tvar res = {};\n\t\t\tvar edge;\n\t\t\tfor(var i = 0, len = edges.length; i < len; i++){\n\t\t\t\tedge = edges[i];\n\t\t\t\tif(!res[edge.source]){\n\t\t\t\t\tres[edge.source] = [];\n\t\t\t\t}\n\t\t\t\tres[edge.source].push(edge);\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\ttarjanStronglyConnectedComponents: function(vertices, edges){\n\t\t\t//https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm\n\t\t\t// iterative implementation\n\t\t\tvar verticesHash = {};\n\t\t\tvar stack = [];\n\t\t\tvar edgesFromTasks = this.groupAdjacentEdges(edges);\n\t\t\tvar recurse = false;\n\t\t\tvar connectedComponents = [];\n\n\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\tvar root = getVertex(vertices[i]);\n\t\t\t\tif(root.visited) continue;\n\t\t\t\tvar workStack = [root];\n\t\t\t\tvar index = 0;\n\t\t\t\twhile(workStack.length){\n\t\t\t\t\tvar v = workStack.pop();\n\n\t\t\t\t\tif(!v.visited){\n\t\t\t\t\t\tv.index = index;\n\t\t\t\t\t\tv.lowLink = index;\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tstack.push(v);\n\t\t\t\t\t\tv.onStack = true;\n\t\t\t\t\t\tv.visited = true;\n\t\t\t\t\t}\n\t\t\t\t\trecurse = false;\n\t\t\t\t\tvar edges = edgesFromTasks[v.id] || [];\n\t\t\t\t\tfor(var e = 0; e < edges.length; e++){\n\t\t\t\t\t\tvar w = getVertex(edges[e].target);\n\t\t\t\t\t\tw.edge = edges[e];\n\t\t\t\t\t\tif(w.index === undefined){\n\t\t\t\t\t\t\tworkStack.push(v);\n\t\t\t\t\t\t\tworkStack.push(w);\n\t\t\t\t\t\t\trecurse = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}else if(w.onStack){\n\t\t\t\t\t\t\tv.lowLink = Math.min(v.lowLink, w.index);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(recurse)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tif (v.index == v.lowLink){\n\t\t\t\t\t\tvar com = {tasks:[], links:[]};\n\t\t\t\t\t\twhile(true){\n\t\t\t\t\t\t\tw = stack.pop();\n\t\t\t\t\t\t\tw.onStack = false;\n\t\t\t\t\t\t\tcom.tasks.push(w.id);\n\t\t\t\t\t\t\tif(w.edge){\n\t\t\t\t\t\t\t\tcom.links.push(w.edge.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(w == v){\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconnectedComponents.push(com);\n\t\t\t\t\t}\n\t\t\t\t\tif(workStack.length){\n\t\t\t\t\t\tw = v;\n\t\t\t\t\t\tv = workStack[workStack.length - 1];\n\t\t\t\t\t\tv.lowLink = Math.min(v.lowLink, w.lowLink);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn connectedComponents;\n\n\t\t\tfunction getVertex(id){\n\t\t\t\tif(!verticesHash[id]){\n\t\t\t\t\tverticesHash[id] = {id: id, onStack:false, index: undefined, lowLink: undefined, edge: undefined};\n\t\t\t\t}\n\n\t\t\t\treturn verticesHash[id];\n\t\t\t}\n\t\t},\n\n\t\tfindLoops: function(relations){\n\t\t\tvar cycles = [];\n\n\t\t\thelpers.forEach(relations, function(rel){\n\t\t\t\tif(rel.target == rel.source)\n\t\t\t\t\tcycles.push([rel.target, rel.source]);\n\t\t\t});\n\n\t\t\tvar vertices = this.getVertices(relations);\n\n\t\t\tvar connectedComponents = this.tarjanStronglyConnectedComponents(vertices, relations);\n\t\t\thelpers.forEach(connectedComponents, function(component){\n\t\t\t\tif(component.tasks.length > 1){\n\t\t\t\t\tcycles.push(component);//{ tasks: [task ids], links: [links ids]}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn cycles;\n\t\t\t//{task:id, link:link.type, lag: link.lag || 0, source: link.source}\n\t\t}\n\t};\n};","module.exports = function (gantt) {\n\t// helpers for building chain of dependencies, used for critical path calculation and for auto scheduling\n\n\tgantt._get_linked_task = function (link, getTarget) {\n\t\tvar task = null;\n\t\tvar taskId = getTarget ? link.target : link.source;\n\n\t\tif (gantt.isTaskExists(taskId)) {\n\t\t\ttask = gantt.getTask(taskId);\n\t\t}\n\n\t\treturn task;\n\t};\n\tgantt._get_link_target = function (link) {\n\t\treturn gantt._get_linked_task(link, true);\n\t};\n\n\tgantt._get_link_source = function (link) {\n\t\treturn gantt._get_linked_task(link, false);\n\t};\n\n\tvar caching = false;\n\tvar formattedLinksStash = {};\n\tvar inheritedSuccessorsStash = {};\n\tvar inheritedPredecessorsStash = {};\n\tvar getPredecessorsCache = {};\n\n\n\tgantt._isLinksCacheEnabled = function () {\n\t\treturn caching;\n\t};\n\tgantt._startLinksCache = function () {\n\t\tformattedLinksStash = {};\n\t\tinheritedSuccessorsStash = {};\n\t\tinheritedPredecessorsStash = {};\n\t\tgetPredecessorsCache = {};\n\t\tcaching = true;\n\t};\n\tgantt._endLinksCache = function () {\n\t\tformattedLinksStash = {};\n\t\tinheritedSuccessorsStash = {};\n\t\tinheritedPredecessorsStash = {};\n\t\tgetPredecessorsCache = {};\n\t\tcaching = false;\n\t};\n\n\tgantt._formatLink = function (link) {\n\n\n\t\tif (caching && formattedLinksStash[link.id]) {\n\t\t\treturn formattedLinksStash[link.id];\n\t\t}\n\n\t\tvar relations = [];\n\t\tvar target = this._get_link_target(link);\n\t\tvar source = this._get_link_source(link);\n\n\t\tif (!(source && target)) {\n\t\t\treturn relations;\n\t\t}\n\n\t\tif ((gantt.isSummaryTask(target) && gantt.isChildOf(source.id, target.id)) || (gantt.isSummaryTask(source) && gantt.isChildOf(target.id, source.id))) {\n\t\t\treturn relations;\n\t\t}\n\n\n\t\t// there are three kinds of connections at this point\n\t\t// task -> task - regular link\n\t\t// task -> project - transform it into set of regular links (task -> [each subtask]), use offset beetween subtask and project dates as lag, in order not to change mutual positions of subtasks inside a project\n\t\t// project -> task - transform it into ([each subtask] -> task) links\n\t\t// project -> project - transform it into ([each subtask of p1] -> [each subtask of p2]) links\n\n\t\tvar from = this._getImplicitLinks(link, source, function (c) {\n\t\t\treturn 0;\n\t\t}, true);\n\n\t\tvar respectTargetOffset = gantt.config.auto_scheduling_move_projects;\n\t\tvar targetDates = this.isSummaryTask(target) ? this.getSubtaskDates(target.id) : {\n\t\t\tstart_date: target.start_date,\n\t\t\tend_date: target.end_date\n\t\t};\n\t\tvar to = this._getImplicitLinks(link, target, function (c) {\n\t\t\tif (!respectTargetOffset) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\n\t\t\t\tif (!c.$target.length && !(gantt.getState().drag_id == c.id)) {// drag_id - virtual lag shouldn't restrict task that is being moved inside project\n\t\t\t\t\treturn gantt.calculateDuration({\n\t\t\t\t\t\tstart_date: targetDates.start_date,\n\t\t\t\t\t\tend_date: c.start_date,\n\t\t\t\t\t\ttask: source\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tfor (var i = 0, fromLength = from.length; i < fromLength; i++) {\n\t\t\tvar fromTask = from[i];\n\t\t\tfor (var j = 0, toLength = to.length; j < toLength; j++) {\n\t\t\t\tvar toTask = to[j];\n\n\t\t\t\tvar lag = fromTask.lag * 1 + toTask.lag * 1;\n\n\t\t\t\tvar subtaskLink = {\n\t\t\t\t\tid: link.id,\n\t\t\t\t\ttype: link.type,\n\t\t\t\t\tsource: fromTask.task,\n\t\t\t\t\ttarget: toTask.task,\n\t\t\t\t\tlag: (link.lag * 1 || 0) + lag\n\t\t\t\t};\n\n\t\t\t\trelations.push(gantt._convertToFinishToStartLink(toTask.task, subtaskLink, source, target, fromTask.taskParent, toTask.taskParent));\n\t\t\t}\n\t\t}\n\n\t\tif (caching)\n\t\t\tformattedLinksStash[link.id] = relations;\n\n\t\treturn relations;\n\t};\n\n\tgantt._isAutoSchedulable = function (task) {\n\t\treturn task.auto_scheduling !== false;\n\t};\n\n\tgantt._getImplicitLinks = function (link, parent, selectOffset, selectSourceLinks) {\n\t\tvar relations = [];\n\n\t\tif (this.isSummaryTask(parent)) {\n\n\t\t\t// if the summary task contains multiple chains of linked tasks - no need to consider every task of the chain,\n\t\t\t// it will be enough to check the first/last tasks of the chain\n\t\t\t// special conditions if there are unscheduled tasks in the chain, or negative lag values that put the end date of the successor task prior to its predecessors' date\n\t\t\tvar children = {};\n\t\t\tthis.eachTask(function (c) {\n\t\t\t\tif (!this.isSummaryTask(c)) {\n\t\t\t\t\tchildren[c.id] = c;\n\t\t\t\t}\n\t\t\t}, parent.id);\n\n\t\t\tvar skipChild;\n\n\t\t\tfor (var c in children) {\n\t\t\t\tvar task = children[c];\n\t\t\t\tvar linksCollection = selectSourceLinks ? task.$source : task.$target;\n\n\t\t\t\tskipChild = false;\n\n\t\t\t\tfor (var l = 0; l < linksCollection.length; l++) {\n\t\t\t\t\tvar siblingLink = gantt.getLink(linksCollection[l]);\n\t\t\t\t\tvar siblingId = selectSourceLinks ? siblingLink.target : siblingLink.source;\n\t\t\t\t\tvar siblingTask = children[siblingId];\n\t\t\t\t\tif (siblingTask && task.auto_scheduling !== false && siblingTask.auto_scheduling !== false) {\n\t\t\t\t\t\tif ((siblingLink.target == siblingTask.id && Math.abs(siblingLink.lag) <= siblingTask.duration) ||\n\t\t\t\t\t\t\t(siblingLink.target == task.id && Math.abs(siblingLink.lag) <= task.duration)) {\n\t\t\t\t\t\t\tskipChild = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skipChild) {\n\t\t\t\t\trelations.push({ task: task.id, taskParent: task.parent, lag: selectOffset(task) });\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\trelations.push({ task: parent.id, taskParent: parent.parent, lag: 0 });\n\t\t}\n\n\t\treturn relations;\n\t};\n\n\tgantt._getDirectDependencies = function (task, selectSuccessors) {\n\n\t\tvar links = [],\n\t\t\tsuccessors = [];\n\n\t\tvar linksIds = selectSuccessors ? task.$source : task.$target;\n\n\t\tfor (var i = 0; i < linksIds.length; i++) {\n\t\t\tvar link = this.getLink(linksIds[i]);\n\t\t\tif (this.isTaskExists(link.source) && this.isTaskExists(link.target)) {\n\t\t\t\tvar target = this.getTask(link.target);\n\t\t\t\tif (this._isAutoSchedulable(target)) {\n\t\t\t\t\tlinks.push(this.getLink(linksIds[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\tsuccessors = successors.concat(this._formatLink(links[i]));\n\t\t}\n\n\t\treturn successors;\n\t};\n\n\tgantt._getInheritedDependencies = function (task, selectSuccessors) {\n\n\t\t//var successors = [];\n\t\tvar stop = false;\n\t\tvar inheritedRelations = [];\n\t\tvar cacheCollection;\n\t\tif (this.isTaskExists(task.id)) {\n\t\t\tthis.eachParent(function (parent) {\n\t\t\t\tif (stop)\n\t\t\t\t\treturn;\n\n\t\t\t\tif (caching) {\n\t\t\t\t\tcacheCollection = selectSuccessors ? inheritedSuccessorsStash : inheritedPredecessorsStash;\n\t\t\t\t\tif (cacheCollection[parent.id]) {\n\t\t\t\t\t\tinheritedRelations = inheritedRelations.concat(cacheCollection[parent.id]);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar parentDependencies;\n\t\t\t\tif (this.isSummaryTask(parent)) {\n\t\t\t\t\tif (!this._isAutoSchedulable(parent)) {\n\t\t\t\t\t\tstop = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparentDependencies = this._getDirectDependencies(parent, selectSuccessors);\n\t\t\t\t\t\tif (caching) {\n\t\t\t\t\t\t\tcacheCollection[parent.id] = parentDependencies;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tinheritedRelations = inheritedRelations.concat(parentDependencies);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}, task.id, this);\n\t\t}\n\n\t\treturn inheritedRelations;\n\t};\n\n\n\tgantt._getDirectSuccessors = function (task) {\n\t\treturn this._getDirectDependencies(task, true);\n\t};\n\n\tgantt._getInheritedSuccessors = function (task) {\n\t\treturn this._getInheritedDependencies(task, true);\n\t};\n\n\tgantt._getDirectPredecessors = function (task) {\n\t\treturn this._getDirectDependencies(task, false);\n\t};\n\n\tgantt._getInheritedPredecessors = function (task) {\n\t\treturn this._getInheritedDependencies(task, false);\n\t};\n\n\tgantt._getSuccessors = function (task, skipInherited) {\n\t\tvar successors = this._getDirectSuccessors(task);\n\t\tif (skipInherited) {\n\t\t\treturn successors;\n\t\t} else {\n\t\t\treturn successors.concat(this._getInheritedSuccessors(task));\n\t\t}\n\t};\n\n\tgantt._getPredecessors = function (task, skipInherited) {\n\t\tvar key = task.id + skipInherited;\n\t\tvar result;\n\n\t\tif (caching && getPredecessorsCache[key]) {\n\t\t\treturn getPredecessorsCache[key];\n\t\t}\n\n\t\tvar predecessors = this._getDirectPredecessors(task);\n\t\tif (skipInherited) {\n\t\t\tresult = predecessors;\n\t\t} else {\n\t\t\tresult = predecessors.concat(this._getInheritedPredecessors(task));\n\t\t}\n\t\tif (caching) {\n\t\t\tgetPredecessorsCache[key] = result;\n\t\t}\n\t\treturn result;\n\t};\n\n\n\tgantt._convertToFinishToStartLink = function (id, link, sourceTask, targetTask, sourceParent, targetParent) {\n\t\t// convert finish-to-finish, start-to-finish and start-to-start to finish-to-start link and provide some additional properties\n\t\tvar res = {\n\t\t\ttarget: id,\n\t\t\tlink: gantt.config.links.finish_to_start,\n\t\t\tid: link.id,\n\t\t\tlag: link.lag || 0,\n\t\t\tsource: link.source,\n\t\t\tpreferredStart: null,\n\t\t\tsourceParent: sourceParent,\n\t\t\ttargetParent: targetParent,\n\t\t\thashSum: null\n\t\t};\n\n\t\tvar additionalLag = 0;\n\t\tswitch (link.type) {\n\t\t\tcase gantt.config.links.start_to_start:\n\t\t\t\tadditionalLag = -sourceTask.duration;\n\t\t\t\tbreak;\n\t\t\tcase gantt.config.links.finish_to_finish:\n\t\t\t\tadditionalLag = -targetTask.duration;\n\t\t\t\tbreak;\n\t\t\tcase gantt.config.links.start_to_finish:\n\t\t\t\tadditionalLag = -sourceTask.duration - targetTask.duration;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tadditionalLag = 0;\n\t\t}\n\n\t\tres.lag += additionalLag;\n\t\tres.hashSum = res.lag + \"_\" + res.link + \"_\" + res.source + \"_\" + res.target;\n\t\treturn res;\n\t};\n};","var linksBuilder = require(\"../../core/relations/links_builder\")(gantt);\nvar graphHelper = require(\"../../core/relations/graph_helper\")(gantt);\n\nmodule.exports = function(gantt){\n\n\tgantt._isProjectEnd = function(task) {\n\t\treturn !(this._hasDuration({\n\t\t\tstart_date: task.end_date,\n\t\t\tend_date: this._getProjectEnd(),\n\t\t\ttask: task\n\t\t}));\n\t};\n\n\treturn {\n\t\t_needRecalc: true,\n\t\t_cache: null,\n\t\treset: function(){\n\t\t\tthis._needRecalc = true;\n\t\t\tthis._cache = null;\n\t\t},\n\t\t_isRecalcNeeded: function(){\n\t\t\treturn this._needRecalc;\n\t\t},\n\t\t_getLinks: function(){\n\t\t\tvar links = linksBuilder.getLinkedTasks();\n\t\t\treturn graphHelper.groupAdjacentEdges(links);\n\t\t},\n\t\t_calculateBranch: function(task, path, criticalTasks, adjacentLinks){\n\t\t\tpath[task.id] = true;\n\t\t\tif(criticalTasks[task.id] !== undefined){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar stack = [task];\n\n\t\t\twhile(stack.length) {\n\t\t\t\ttask = stack.pop();\n\n\t\t\t\tif(criticalTasks[task.id] || gantt._isProjectEnd(task)){\n\t\t\t\t\tcriticalTasks[task.id] = true;\n\t\t\t\t\twhile(stack.length){\n\t\t\t\t\t\tvar task = stack.pop();\n\t\t\t\t\t\tcriticalTasks[task.id] = true;\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tcriticalTasks[task.id] = false;\n\t\t\t\t\tvar successors = adjacentLinks[task.id] || [];\n\t\t\t\t\tfor (var i = 0; i < successors.length; i++) {\n\n\t\t\t\t\t\tvar next = gantt.getTask(successors[i].target);\n\t\t\t\t\t\tif (gantt._getSlack(task, next, successors[i]) <= 0 && (!path[next.id] || criticalTasks[next.id])) {\n\t\t\t\t\t\t\tpath[next.id] = true;\n\n\t\t\t\t\t\t\tstack.push(task);\n\t\t\t\t\t\t\tstack.push(next);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_calculateSummaryTasks: function(summaryHash, criticalHash){\n\t\t\tfor(var i in criticalHash){\n\t\t\t\tif(criticalHash[i]){\n\t\t\t\t\tvar parent = gantt.getParent(i);\n\t\t\t\t\twhile(summaryHash[parent] === undefined && gantt.isTaskExists(parent)){\n\t\t\t\t\t\tsummaryHash[parent] = true;\n\t\t\t\t\t\tparent = gantt.getParent(parent);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(var i in summaryHash){\n\t\t\t\tcriticalHash[i] = !!summaryHash[i];\n\t\t\t}\n\t\t},\n\n\t\t_calculate: function calculateCriticalPath(){\n\t\t\tvar criticalTasks = {};\n\t\t\tvar clearCache = false;\n\t\t\tvar path = {};\n\t\t\tif(!gantt._isLinksCacheEnabled()) {\n\t\t\t\tgantt._startLinksCache();\n\t\t\t\tclearCache = true;\n\t\t\t}\n\t\t\tvar links = this._getLinks();\n\n\t\t\tvar summaryTasks = {};\n\t\t\tgantt.eachTask(function(task){\n\t\t\t\tif(path[task.id])\n\t\t\t\t\treturn;\n\t\t\t\tif(gantt.isSummaryTask(task)){\n\t\t\t\t\tsummaryTasks[task.id] = undefined;\n\t\t\t\t}else{\n\t\t\t\t\tthis._calculateBranch(task, path, criticalTasks, links);\n\t\t\t\t}\n\t\t\t}, gantt.config.root_id, this);\n\n\t\t\tthis._calculateSummaryTasks(summaryTasks, criticalTasks);\n\n\t\t\tif(clearCache)\n\t\t\t\tgantt._endLinksCache();\n\t\t\treturn criticalTasks;\n\t\t},\n\n\t\tisCriticalTask: function(task) {\n\t\t\tif(!task) return false;\n\n\t\t\tif(this._isRecalcNeeded()){\n\t\t\t\tthis._cache = this._calculate();\n\t\t\t\tthis._needRecalc = false;\n\t\t\t}\n\n\t\t\treturn this._cache[task.id];\n\t\t},\n\n\t\tinit: function(){\n\t\t\tvar resetCache = gantt.bind(function(){\n\t\t\t\tthis.reset();\n\t\t\t\treturn true;\n\t\t\t}, this);\n\t\t\t\n\t\t\tgantt.attachEvent(\"onAfterLinkAdd\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterLinkUpdate\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterLinkDelete\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterTaskAdd\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterTaskUpdate\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterTaskDelete\", resetCache);\n\t\t\tgantt.attachEvent(\"onParse\", resetCache);\n\t\t\tgantt.attachEvent(\"onClearAll\", resetCache);\n\n\n\t\t\tvar criticalPathHandler = function(){\n\t\t\t\tif(gantt.config.highlight_critical_path)\n\t\t\t\t\tgantt.render();\n\t\t\t};\n\t\t\tgantt.attachEvent(\"onAfterLinkAdd\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterLinkUpdate\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterLinkDelete\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskAdd\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskUpdate\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskDelete\", criticalPathHandler);\n\t\t}\n\t};\n};","var linksBuilder = require(\"../../core/relations/links_builder\")(gantt);\nvar helpers = require(\"../../utils/helpers\");\n\nmodule.exports = function(gantt) {\n\tvar _private = {\n\t\t_freeSlack: {},\n\t\t_totalSlack: {},\n\t\t_slackNeedCalculate: true,\n\t\t_linkedTasksById: {},\n\t\t_calculateTotalSlack: function() {\n\t\t\tvar linksByTaskId = this._linkedTasksById;\n\n\t\t\thelpers.forEach(linksBuilder.getLinkedTasks(), function(entry) {\n\t\t\t\tvar task = gantt.getTask(entry.target);\n\t\t\t\tvar slack = gantt.getFreeSlack(task);\n\n\t\t\t\tif (!linksByTaskId[entry.source]) {\n\t\t\t\t\tlinksByTaskId[entry.source] = {\n\t\t\t\t\t\tminSlack: {\n\t\t\t\t\t\t\ttarget: entry.target,\n\t\t\t\t\t\t\tslack: slack\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlinked: []\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tif (slack < linksByTaskId[entry.source].minSlack.slack) {\n\t\t\t\t\t\tlinksByTaskId[entry.source].minSlack = {\n\t\t\t\t\t\t\ttarget: entry.target,\n\t\t\t\t\t\t\tslack: slack\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlinksByTaskId[entry.source].linked.push({\n\t\t\t\t\ttarget: entry.target,\n\t\t\t\t\tslack: slack\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tvar totalSlackByTaskId = {};\n\n\t\t\tgantt.eachTask(function(entry) {\n\t\t\t\tif (gantt.isSummaryTask(entry)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (totalSlackByTaskId[entry.id] === undefined) {\n\t\t\t\t\ttotalSlackByTaskId[entry.id] = 0;\n\t\t\t\t}\n\t\t\t\ttotalSlackByTaskId[entry.id] += _private._chainSlackCount(entry);\n\t\t\t});\n\n\t\t\tgantt._slacksChanged = false;\n\t\t\tthis._slackNeedCalculate = false;\n\t\t\tthis._totalSlack = totalSlackByTaskId;\n\n\t\t\treturn totalSlackByTaskId;\n\t\t},\n\t\t_chainSlackCount: function(entry, additional) {\n\t\t\tadditional = additional || 0;\n\t\t\tswitch (true) {\n\t\t\tcase (!this._linkedTasksById[entry.id]):\n\t\t\t\treturn gantt.calculateDuration(entry.end_date, gantt.getSubtaskDates().end_date) + additional;\n\t\t\tcase (this._linkedTasksById[entry.id].linked.length === 1):\n\t\t\t\treturn this._chainSlackCount(gantt.getTask(this._linkedTasksById[entry.id].linked[0].target), gantt.getFreeSlack(entry)) + additional;\n\t\t\tcase (this._linkedTasksById[entry.id].linked.length > 1):\n\t\t\t\tvar targetWithMinimalSlack = this._getTargetWithMinimalSlack(this._linkedTasksById[entry.id].linked);\n\n\t\t\t\treturn this._chainSlackCount(gantt.getTask(targetWithMinimalSlack.target), gantt.getFreeSlack(entry)) + additional;\n\t\t\t}\n\t\t},\n\n\t\t_getTargetWithMinimalSlack: function(linked) {\n\t\t\tvar result;\n\t\t\thelpers.forEach(linked, function(entry) {\n\t\t\t\tif (result === undefined || entry.slack < result.slack) {\n\t\t\t\t\tresult = entry;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result;\n\t\t},\n\n\t\t_calculateTaskSlack: function(task) {\n\t\t\tvar slack;\n\n\t\t\tif (task.$source && task.$source.length) {\n\t\t\t\tslack = this._calculateRelationSlack(task);\n\t\t\t} else {\n\t\t\t\tslack = this._calculateHierarchySlack(task);\n\t\t\t}\n\n\t\t\treturn slack;\n\t\t},\n\n\t\t_calculateRelationSlack: function(task) {\n\t\t\tvar minSlack = 0,\n\t\t\t\tslack,\n\t\t\t\tlinks = task.$source;\n\n\t\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\t\tslack = this._calculateLinkSlack(links[i]);\n\t\t\t\tif (minSlack > slack || i === 0) {\n\t\t\t\t\tminSlack = slack;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn minSlack;\n\t\t},\n\n\t\t_calculateLinkSlack: function(linkId) {\n\t\t\tvar link = gantt.getLink(linkId);\n\t\t\tvar slack = 0;\n\t\t\tif (gantt.isTaskExists(link.source) && gantt.isTaskExists(link.target)) {\n\t\t\t\tslack = gantt.getSlack(gantt.getTask(link.source), gantt.getTask(link.target));\n\t\t\t}\n\t\t\treturn slack;\n\t\t},\n\n\t\t_calculateHierarchySlack: function(task) {\n\t\t\tvar slack = 0;\n\t\t\tvar from;\n\t\t\tvar to = gantt.getSubtaskDates().end_date;\n\t\t\tif (gantt.isTaskExists(task.parent)) {\n\t\t\t\tfrom = gantt.getSubtaskDates(task.id).end_date || task.end_date;\n\t\t\t} else {\n\t\t\t\tfrom = task.end_date;\n\t\t\t}\n\t\t\tslack = Math.max(gantt.calculateDuration(from, to), 0);\n\t\t\treturn slack;\n\t\t},\n\n\t\t_resetTotalSlackCache: function() {\n\t\t\tthis._slackNeedCalculate = true;\n\t\t},\n\n\t\t_shouldCalculateTotalSlack: function() {\n\t\t\treturn this._slackNeedCalculate;\n\t\t},\n\n\t\tgetFreeSlack: function(task) {\n\t\t\tif (!gantt.isTaskExists(task.id)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (!this._freeSlack[task.id]) {\n\t\t\t\tif (gantt.isSummaryTask(task)) {\n\t\t\t\t\tthis._freeSlack[task.id] = undefined;\n\t\t\t\t} else {\n\t\t\t\t\tthis._freeSlack[task.id] =  this._calculateTaskSlack(task);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._freeSlack[task.id];\n\t\t},\n\n\t\tgetTotalSlack: function(task) {\n\t\t\tif (this._shouldCalculateTotalSlack()) {\n\t\t\t\tthis._calculateTotalSlack();\n\t\t\t}\n\t\t\tif (task === undefined) {\n\t\t\t\treturn this._totalSlack;\n\t\t\t}\n\t\t\tif (task.id !== undefined) {\n\t\t\t\treturn this._totalSlack[task.id];\n\t\t\t}\n\t\t\treturn this._totalSlack[task] || 0;\n\t\t},\n\n\t\tdropCachedFreeSlack: function() {\n\t\t\tthis._linkedTasksById = {};\n\t\t\tthis._freeSlack =  {};\n\t\t\tthis._resetTotalSlackCache();\n\t\t},\n\n\t\tinit: function(){\n\t\t\tfunction slackHandler(){\n\t\t\t\t_private.dropCachedFreeSlack();\n\t\t\t}\n\t\t\tgantt.attachEvent(\"onAfterLinkAdd\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterLinkUpdate\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterLinkDelete\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskAdd\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskUpdate\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskDelete\", slackHandler);\n\t\t\tgantt.attachEvent(\"onRowDragEnd\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskMove\", slackHandler);\n\t\t}\n\t};\n\n\treturn _private;\n};","require(\"../core/relations/links_common\")(gantt);\n\nvar _private = require(\"./critical_path/slack\")(gantt);\n_private.init();\n\ngantt.getFreeSlack = function(task) {\n\treturn _private.getFreeSlack(task);\n};\n\ngantt.getTotalSlack = function(task) {\n\treturn _private.getTotalSlack(task);\n};\n\nvar criticalPath = require(\"./critical_path/critical_path\")(gantt);\ngantt.config.highlight_critical_path = false;\ncriticalPath.init();\n\ngantt.isCriticalTask = function (task) {\n\tgantt.assert(!!(task && task.id !== undefined), \"Invalid argument for gantt.isCriticalTask\");\n\treturn criticalPath.isCriticalTask(task);\n};\n\ngantt.isCriticalLink = function (link) {\n\treturn this.isCriticalTask(gantt.getTask(link.source));\n};\n\n\ngantt.getSlack = function(task1, task2) {\n\tvar minSlack = 0;\n\tvar relations = [];\n\tvar common = {};\n\n\tfor (var i = 0; i < task1.$source.length; i++) {\n\t\tcommon[task1.$source[i]] = true;\n\t}\n\tfor (var i = 0; i < task2.$target.length; i++) {\n\t\tif(common[task2.$target[i]])\n\t\t\trelations.push(task2.$target[i]);\n\t}\n\n\tfor (var i = 0; i < relations.length; i++) {\n\t\tvar link = this.getLink(relations[i]);\n\t\tvar newSlack = this._getSlack(task1, task2, this._convertToFinishToStartLink(link.id, link, task1, task2, task1.parent, task2.parent));\n\n\t\tif (minSlack > newSlack || i === 0) {\n\t\t\tminSlack = newSlack;\n\t\t}\n\t}\n\n\treturn minSlack;\n};\n\ngantt._getSlack = function (task, next_task, relation) {\n\t// relation - link expressed as finish-to-start (gantt._convertToFinishToStartLink)\n\tvar types = this.config.types;\n\n\tvar from = null;\n\tif (this.getTaskType(task.type) == types.milestone) {\n\t\tfrom = task.start_date;\n\t} else {\n\t\tfrom = task.end_date;\n\t}\n\n\tvar to = next_task.start_date;\n\n\tvar duration = 0;\n\tif (+from > +to) {\n\t\tduration = -this.calculateDuration({start_date: to, end_date: from, task: task});\n\t} else {\n\t\tduration = this.calculateDuration({start_date: from, end_date: to, task: task});\n\t}\n\n\tvar lag = relation.lag;\n\tif (lag && lag*1 == lag) {\n\t\tduration -= lag;\n\t}\n\n\treturn duration;\n};\n\n\n\n","var units = {\n\t\"second\": 1,\n\t\"minute\": 60,\n\t\"hour\": 60 * 60,\n\t\"day\": 60 * 60 * 24,\n\t\"week\": 60 * 60 * 24 * 7,\n\t\"month\": 60 * 60 * 24 * 30,\n\t\"quarter\": 60 * 60 * 24 * 30 * 3,\n\t\"year\": 60 * 60 * 24 * 365\n};\nfunction getSecondsInUnit(unit){\n\treturn units[unit] || units.hour;\n}\n\nfunction forEach(arr, callback) {\n\tif (arr.forEach) {\n\t\tarr.forEach(callback);\n\t} else {\n\t\tvar workArray = arr.slice();\n\t\tfor (var i = 0; i < workArray.length; i++) {\n\t\t\tcallback(workArray[i], i);\n\t\t}\n\t}\n}\n\nfunction arrayMap(arr, callback) {\n\tif (arr.map) {\n\t\treturn arr.map(callback);\n\t} else {\n\t\tvar workArray = arr.slice();\n\t\tvar resArray = [];\n\n\t\tfor (var i = 0; i < workArray.length; i++) {\n\t\t\tresArray.push(callback(workArray[i], i));\n\t\t}\n\t\treturn resArray;\n\t}\n}\n\n\nfunction arrayFind(arr, callback) {\n\tif (arr.find) {\n\t\treturn arr.find(callback);\n\t} else {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (callback(arr[i], i)) {\n\t\t\t\treturn arr[i];\n\t\t\t}\n\t\t}\n\t}\n}\n\n// iframe-safe array type check instead of using instanceof\nfunction isArray(obj){\n\tif(Array.isArray){\n\t\treturn Array.isArray(obj);\n\t}else{\n\t\t// close enough\n\t\treturn (obj && obj.length !== undefined && obj.pop && obj.push);\n\t}\n}\n\n// non-primitive string object, e.g. new String(\"abc\")\nfunction isStringObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function String() { [native code] }\";\n}\n\n// non-primitive number object, e.g. new Number(5)\nfunction isNumberObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function Number() { [native code] }\";\n}\n\n// non-primitive number object, e.g. new Boolean(true)\nfunction isBooleanObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function Boolean() { [native code] }\";\n}\n\nfunction isDate(obj) {\n\tif (obj && typeof obj === \"object\") {\n\t\treturn !!(obj.getFullYear && obj.getMonth && obj.getDate);\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction arrayFilter(arr, callback) {\n\tvar result = [];\n\n\tif (arr.filter) {\n\t\treturn arr.filter(callback);\n\t} else {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (callback(arr[i], i)) {\n\t\t\t\tresult[result.length] = arr[i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nfunction hashToArray(hash) {\n\tvar result = [];\n\n\tfor (var key in hash) {\n\t\tif (hash.hasOwnProperty(key)) {\n\t\t\tresult.push(hash[key]);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction arraySome(arr, callback) {\n\tif (arr.length === 0) return false;\n\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (callback(arr[i], i, arr)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction arrayDifference(arr, callback) {\n\treturn arrayFilter(arr, function(item, i) {\n\t\treturn !callback(item, i);\n\t});\n}\n\nfunction throttle (callback, timeout) {\n\tvar wait = false;\n\n\treturn function () {\n\t\tif (!wait) {\n\t\t\tcallback.apply(null, arguments);\n\t\t\twait = true;\n\t\t\tsetTimeout(function () {\n\t\t\t\twait = false;\n\t\t\t}, timeout);\n\t\t}\n\t};\n}\n\nfunction delay (callback, timeout){\n\tvar timer;\n\n\tvar result = function() {\n\t\tresult.$cancelTimeout();\n\t\tcallback.$pending = true;\n\t\tvar args = Array.prototype.slice.call(arguments);\n\t\ttimer = setTimeout(function(){\n\t\t\tcallback.apply(this, args);\n\t\t\tresult.$pending = false;\n\t\t}, timeout);\n\t};\n\t\n\tresult.$pending = false;\n\tresult.$cancelTimeout = function(){\n\t\tclearTimeout(timer);\n\t\tcallback.$pending = false;\n\t};\n\tresult.$execute = function(){\n\t\tcallback();\n\t\tcallback.$cancelTimeout();\n\t};\n\n\treturn result;\n}\n\nfunction sortArrayOfHash(arr, field, desc) {\n\tvar compare = function(a, b) {\n\t\treturn a < b;\n\t};\n\n\tarr.sort(function(a, b) {\n\t\tif (a[field] === b[field]) return 0;\n\n\t\treturn desc ? compare(a[field], b[field]) : compare(b[field], a[field]);\n\t});\n}\n\nfunction objectKeys(obj) {\n\tif (Object.keys) {\n\t\treturn Object.keys(obj);\n\t}\n\tvar result = [];\n\tvar key;\n\tfor (key in obj) {\n\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\tresult.push(key);\n\t\t}\n\t}\n\treturn result;\n}\n\nmodule.exports = {\n\tgetSecondsInUnit: getSecondsInUnit,\n\tforEach: forEach,\n\tarrayMap: arrayMap,\n\tarrayFind: arrayFind,\n\tarrayFilter: arrayFilter,\n\tarrayDifference: arrayDifference,\n\tarraySome: arraySome,\n\thashToArray: hashToArray,\n\tsortArrayOfHash: sortArrayOfHash,\n\tthrottle: throttle,\n\tisArray: isArray,\n\tisDate: isDate,\n\tisStringObject: isStringObject,\n\tisNumberObject: isNumberObject,\n\tisBooleanObject: isBooleanObject,\n\tdelay: delay,\n\tobjectKeys: objectKeys\n};"],"sourceRoot":""}